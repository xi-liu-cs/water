#pragma kernel NoiseFieldGenerator
#include "../Noise/noise.cginc"

uint3 dimension;
float scale;
float time;
float max_density;
RWStructuredBuffer<float> voxels;

int hash(int x, int y, int z)
{
    return x + dimension.x * (y + dimension.y * z);
}

[numthreads(8, 8, 8)]
void NoiseFieldGenerator(uint3 id : SV_DispatchThreadID)
{
    float3 p = scale * (id + 0.5 - dimension / 2);
    float value = -p.y;
    value += snoise(p * 0.83 + float3(-0.37, -0.12, 0) * time) * 0.5;
    value += snoise(p * 0.72 + float3(0.21, +0.07, 0) * time) * 0.5;
    voxels[id.x + dimension.x * (id.y + dimension.y * id.z)] = value;
}